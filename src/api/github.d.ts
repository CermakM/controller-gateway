// This file has been autogenerated

// Webhook Schema
export interface Webhook {
    action?: string | null;
    issue?: Issue | null;
    repository: Repository;
    sender: UserOrOwnerOrSender;
    commits?: (CommitsEntity)[] | null;
    head_commit?: HeadCommit | null;
    ref?: string | null;
    before?: string | null;
    after?: string | null;
    created?: boolean | null;
    deleted?: boolean | null;
    forced?: boolean | null;
    base_ref?: null;
    compare?: string | null;
    pusher?: Pusher | null;
    number?: number | null;
    pull_request?: PullRequest | null;
}
export interface Issue {
    url: string;
    repository_url: string;
    labels_url: string;
    comments_url: string;
    events_url: string;
    html_url: string;
    id: number;
    node_id: string;
    number: number;
    title: string;
    user: UserOrOwnerOrSender;
    labels?: (null)[] | null;
    state: string;
    locked: boolean;
    assignee?: null;
    assignees?: (null)[] | null;
    milestone?: null;
    comments: number;
    created_at: string;
    updated_at: string;
    closed_at?: null;
    author_association: string;
    body: string;
}
export interface UserOrOwnerOrSender {
    login: string;
    id: number;
    node_id: string;
    avatar_url: string;
    gravatar_id: string;
    url: string;
    html_url: string;
    followers_url: string;
    following_url: string;
    gists_url: string;
    starred_url: string;
    subscriptions_url: string;
    organizations_url: string;
    repos_url: string;
    events_url: string;
    received_events_url: string;
    type: string;
    site_admin: boolean;
}
export interface Repository {
    id: number;
    node_id: string;
    name: string;
    full_name: string;
    private: boolean;
    owner: Owner;
    html_url: string;
    description: string;
    fork: boolean;
    url: string;
    forks_url: string;
    keys_url: string;
    collaborators_url: string;
    teams_url: string;
    hooks_url: string;
    issue_events_url: string;
    events_url: string;
    assignees_url: string;
    branches_url: string;
    tags_url: string;
    blobs_url: string;
    git_tags_url: string;
    git_refs_url: string;
    trees_url: string;
    statuses_url: string;
    languages_url: string;
    stargazers_url: string;
    contributors_url: string;
    subscribers_url: string;
    subscription_url: string;
    commits_url: string;
    git_commits_url: string;
    comments_url: string;
    issue_comment_url: string;
    contents_url: string;
    compare_url: string;
    merges_url: string;
    archive_url: string;
    downloads_url: string;
    issues_url: string;
    pulls_url: string;
    milestones_url: string;
    notifications_url: string;
    labels_url: string;
    releases_url: string;
    deployments_url: string;
    created_at: string | number;
    updated_at: string;
    pushed_at: string | number;
    git_url: string;
    ssh_url: string;
    clone_url: string;
    svn_url: string;
    homepage?: null;
    size: number;
    stargazers_count: number;
    watchers_count: number;
    language?: null;
    has_issues: boolean;
    has_projects: boolean;
    has_downloads: boolean;
    has_wiki: boolean;
    has_pages: boolean;
    forks_count: number;
    mirror_url?: null;
    archived: boolean;
    disabled: boolean;
    open_issues_count: number;
    license: License;
    forks: number;
    open_issues: number;
    watchers: number;
    default_branch: string;
    stargazers?: number | null;
    master_branch?: string | null;
}
export interface Owner {
    login: string;
    id: number;
    node_id: string;
    avatar_url: string;
    gravatar_id: string;
    url: string;
    html_url: string;
    followers_url: string;
    following_url: string;
    gists_url: string;
    starred_url: string;
    subscriptions_url: string;
    organizations_url: string;
    repos_url: string;
    events_url: string;
    received_events_url: string;
    type: string;
    site_admin: boolean;
    name?: string | null;
    email?: string | null;
}
export interface License {
    key: string;
    name: string;
    spdx_id: string;
    url: string;
    node_id: string;
}
export interface CommitsEntity {
    id: string;
    tree_id: string;
    distinct: boolean;
    message: string;
    timestamp: string;
    url: string;
    author?: (null)[] | null;
    committer?: (null)[] | null;
    added?: (null)[] | null;
    removed?: (null)[] | null;
    modified?: (null)[] | null;
}
export interface HeadCommit {
    id: string;
    tree_id: string;
    distinct: boolean;
    message: string;
    timestamp: string;
    url: string;
    author: AuthorOrCommitter;
    committer: AuthorOrCommitter;
    added?: (null)[] | null;
    removed?: (null)[] | null;
    modified?: (string)[] | null;
}
export interface AuthorOrCommitter {
    name: string;
    email: string;
    username: string;
}
export interface Pusher {
    name: string;
    email: string;
}
export interface PullRequest {
    url: string;
    id: number;
    node_id: string;
    html_url: string;
    diff_url: string;
    patch_url: string;
    issue_url: string;
    number: number;
    state: string;
    locked: boolean;
    title: string;
    user: UserOrOwnerOrSender;
    body: string;
    created_at: string;
    updated_at: string;
    closed_at?: null;
    merged_at?: null;
    merge_commit_sha?: null;
    assignee?: null;
    assignees?: (null)[] | null;
    requested_reviewers?: (null)[] | null;
    requested_teams?: (null)[] | null;
    labels?: (null)[] | null;
    milestone?: null;
    commits_url: string;
    review_comments_url: string;
    review_comment_url: string;
    comments_url: string;
    statuses_url: string;
    head: HeadOrBase;
    base: HeadOrBase;
    _links: Links;
    author_association: string;
    draft: boolean;
    merged: boolean;
    mergeable?: null;
    rebaseable?: null;
    mergeable_state: string;
    merged_by?: null;
    comments: number;
    review_comments: number;
    maintainer_can_modify: boolean;
    commits: number;
    additions: number;
    deletions: number;
    changed_files: number;
}
export interface HeadOrBase {
    label: string;
    ref: string;
    sha: string;
    user?: (null)[] | null;
    repo?: (null)[] | null;
}
export interface Links {
    self?: (null)[] | null;
    html?: (null)[] | null;
    issue?: (null)[] | null;
    comments?: (null)[] | null;
    review_comments?: (null)[] | null;
    review_comment?: (null)[] | null;
    commits?: (null)[] | null;
    statuses?: (null)[] | null;
}
